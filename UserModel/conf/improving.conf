# Ruta donde estan los datos de entrada de training del modelo de mejora
weka.train.data.file=\\\\192.168.1.40\\home\\TFM\\Data\\WEKA\\t6\\train.arff
# Ruta donde estan los datos de entrada de evaluacion del modelo de mejora
weka.test.data.file=\\\\192.168.1.40\\home\\TFM\\Data\\WEKA\\t6\\test.arff
# Ruta donde se va a almacenar el resultado de la evaluación del modelo de mejora
weka.test.result.file=\\\\192.168.1.40\\home\\TFM\\Data\\WEKA\\t6i\\test.out
# Ruta donde se va a almacenar el clasificador mejoradoque se cree.
weka.model.file=\\\\192.168.1.40\\home\\TFM\\Data\\WEKA\\t6i\\model.weka
# Clase de Weka que ejecuta el clasificador para crear el modelo de mejora. Ej: weka.classifiers.functions.MultilayerPerceptron, weka.classifiers.rules.M5Rules,etc.
weka.algorith=weka.classifiers.functions.MultilayerPerceptron
# Opciones correspondientes al clasificador de mejora que se va a usar. Ej  -L 0.1 -M 0.2 -N 500 -V 0 -S 0 -E 20 -H 12 , -M 4.0
weka.algorith.options=-L 0.1 -M 0.2 -N 500 -V 0 -S 0 -E 20 -H 39
# Estadistico usado para indicar si el nuevo modelo es mejor que el actual. 
# Valores posibles: Correlation coefficient, Mean absolute error, Root mean squared error, Relative absolute error, Root relative squared error.
weka.improve.statistic=Correlation coefficient
# Porcentaje de mejora en el estadistico frente a modelo actual para considerar que modelo nuevo lo sustituye
weka.improve.percent=0.005
# Iteraciones maximas de ejecucion de algorimo en caso de no llegar al porcetaje de mejora.
weka.improve.max.iterations=1
